buildscript {
    ext {
        kotlinVersion= '1.5.30'
    }
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.gradle.publish:plugin-publish-plugin:0.14.0"
    }
}



plugins {
    id 'org.jetbrains.kotlin.jvm' version "${kotlinVersion}"
}

apply plugin: "com.gradle.plugin-publish"
apply plugin: 'java-gradle-plugin'
apply plugin: 'kotlin'
apply plugin: 'maven-publish'

group 'gradle.plugin.com.betomorrow.gradle'
version '1.3.1'

repositories {
    mavenCentral()
    jcenter()
    google()
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'org.jetbrains.kotlin') {
            details.useVersion "${kotlinVersion}"
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-common:${kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"


    compileOnly gradleApi()

    // Third Party
    compileOnly 'com.android.tools.build:gradle:4.1.3'

    implementation 'com.squareup.okhttp3:okhttp:4.9.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'

    // Testing
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly'org.junit.jupiter:junit-jupiter-engine:5.3.1'

    testImplementation 'org.assertj:assertj-core:3.19.0'
    testImplementation gradleTestKit()

    testRuntimeOnly "cglib:cglib-nodep:3.3.0"        // allows mocking of classes (in addition to interfaces)
    testRuntimeOnly "org.objenesis:objenesis:3.2"    // allows mocking of classes without default constructor (together with CGLIB)
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

test {
    useJUnitPlatform {}
}

/**
 * Integration test
 */
sourceSets {
    integrationTest {
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output

        java.srcDir file("./src/integration-test/kotlin")
        resources.srcDir file("./src/integration-test/resources")
    }
}

task integrationTest(type: Test, group: "verification") {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
    mustRunAfter test

    useJUnitPlatform()
}

// check.dependsOn integrationTest

gradlePlugin {
    testSourceSets sourceSets.integrationTest
    plugins {
        appCenterPlugin {
            id = 'com.betomorrow.appcenter'
            implementationClass = 'com.betomorrow.gradle.appcenter.AppCenterPlugin'
        }
    }
}

/**
 * Publishing
 */

task sourceJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allSource
}

wrapper {
    gradleVersion = "7.2"
    distributionType = Wrapper.DistributionType.ALL
}

pluginBundle {
    website = 'https://github.com/oliviergauthier/gradle-appcenter-plugin'
    vcsUrl = 'https://github.com/oliviergauthier/gradle-appcenter-plugin'
    tags = ['android', 'appcenter', 'plugin', 'tool']

    plugins {
        appCenterPlugin {
            id = 'com.betomorrow.appcenter'
            displayName = 'Gradle AppCenter Plugin'
            description = 'Plugin to upload apk to AppCenter'
        }
    }
}
